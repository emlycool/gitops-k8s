name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: test
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./app
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Helm chart version
      id: update-helm
      run: |
        # Debug: Show all metadata outputs
        echo "All metadata outputs:"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo "Labels: ${{ steps.meta.outputs.labels }}"
        
        # Get the latest tag
        LATEST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
        echo "Latest tag: $LATEST_TAG"
        
        # Update the Helm chart values.yaml with new image tag
        if [ -f "infrastructure/helm-chart/values.yaml" ]; then
          # Extract just the tag part (remove registry and image name)
          IMAGE_TAG=$(echo $LATEST_TAG | sed 's/.*://')
          echo "Extracted image tag: $IMAGE_TAG"
          
          # Show current values.yaml content
          echo "Current values.yaml tag line:"
          grep "tag:" infrastructure/helm-chart/values.yaml
          
          # Update the image tag in values.yaml
          sed -i "s|tag:.*|tag: \"$IMAGE_TAG\"|" infrastructure/helm-chart/values.yaml
          
          echo "Updated Helm chart with image tag: $IMAGE_TAG"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          
          # Show the updated values.yaml for debugging
          echo "Updated values.yaml content:"
          grep "tag:" infrastructure/helm-chart/values.yaml
        else
          echo "Warning: infrastructure/helm-chart/values.yaml not found"
        fi

    - name: Commit and push Helm chart changes
      if: steps.update-helm.outputs.image_tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check git status
        git status
        
        # Add the changed file
        git add infrastructure/helm-chart/values.yaml
        
        # Check what's staged
        git diff --cached
        
        # Commit changes
        git commit -m "Update Helm chart image tag to ${{ steps.update-helm.outputs.image_tag }}"
        
        # Push to the same branch
        git push origin ${{ github.ref_name }}
        
        echo "Successfully pushed Helm chart updates" 